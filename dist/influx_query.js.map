{"version":3,"sources":["../src/influx_query.js"],"names":["_","queryPart","kbn","EneInfluxQuery","target","templateSrv","scopedVars","policy","dsType","resultFormat","tags","groupBy","type","params","select","updateProjection","selectModels","map","parts","create","groupByParts","selectParts","part","def","find","g","value","stringParts","match","typePart","arg","partModel","partCount","length","push","splice","index","categories","getCategories","filter","s","category","Aggregations","Selectors","modelsIndex","indexOf","partIndex","updatePersistedParts","addStrategy","tag","interpolate","str","operator","condition","test","replace","key","measurement","variable","defaultFormatFn","multi","includeAll","regexEscape","escapedValues","join","rawQuery","query","interpolateQueryStr","i","y","selectText","render","getMeasurementAndPolicy","conditions","renderTagCondition","groupBySection","fill","filters"],"mappings":"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","file":"influx_query.js","sourcesContent":["import _ from 'lodash';\r\nimport queryPart from './query_part';\r\nimport kbn from 'app/core/utils/kbn';\r\n\r\nexport default class EneInfluxQuery {\r\n  target;\r\n  selectModels;\r\n  queryBuilder;\r\n  groupByParts;\r\n  templateSrv;\r\n  scopedVars;\r\n\r\n  /** @ngInject */\r\n  constructor(target, templateSrv, scopedVars) {\r\n    this.target = target;\r\n    this.templateSrv = templateSrv;\r\n    this.scopedVars = scopedVars;\r\n\r\n    target.policy = target.policy || 'default';\r\n    target.dsType = 'influxdb';\r\n    target.resultFormat = target.resultFormat || 'time_series';\r\n    target.tags = target.tags || [];\r\n    target.groupBy = target.groupBy || [\r\n      {type: 'time', params: ['$interval']},\r\n      {type: 'fill', params: ['null']},\r\n    ];\r\n    target.select = target.select || [[\r\n      {type: 'field', params: ['value']},\r\n      {type: 'mean', params: []},\r\n    ]];\r\n\r\n    this.updateProjection();\r\n  }\r\n\r\n  updateProjection() {\r\n    this.selectModels = _.map(this.target.select, function(parts) {\r\n      return _.map(parts, queryPart.create);\r\n    });\r\n    this.groupByParts = _.map(this.target.groupBy, queryPart.create);\r\n  }\r\n\r\n  updatePersistedParts() {\r\n    this.target.select = _.map(this.selectModels, function(selectParts) {\r\n      return _.map(selectParts, function(part) {\r\n        return {type: part.def.type, params: part.params};\r\n      });\r\n    });\r\n  }\r\n\r\n  hasGroupByTime() {\r\n    return _.find(this.target.groupBy, (g) => g.type === 'time');\r\n  }\r\n\r\n  hasFill() {\r\n    return _.find(this.target.groupBy, (g) => g.type === 'fill');\r\n  }\r\n\r\n  addGroupBy(value) {\r\n    var stringParts = value.match(/^(\\w+)\\((.*)\\)$/);\r\n    var typePart = stringParts[1];\r\n    var arg = stringParts[2];\r\n    var partModel = queryPart.create({type: typePart, params: [arg]});\r\n    var partCount = this.target.groupBy.length;\r\n\r\n    if (partCount === 0) {\r\n      this.target.groupBy.push(partModel.part);\r\n    } else if (typePart === 'time') {\r\n      this.target.groupBy.splice(0, 0, partModel.part);\r\n    } else if (typePart === 'tag') {\r\n      if (this.target.groupBy[partCount-1].type === 'fill') {\r\n        this.target.groupBy.splice(partCount-1, 0, partModel.part);\r\n      } else {\r\n        this.target.groupBy.push(partModel.part);\r\n      }\r\n    } else {\r\n      this.target.groupBy.push(partModel.part);\r\n    }\r\n\r\n    this.updateProjection();\r\n  }\r\n\r\n  removeGroupByPart(part, index) {\r\n    var categories = queryPart.getCategories();\r\n\r\n    if (part.def.type === 'time') {\r\n      // remove fill\r\n      this.target.groupBy = _.filter(this.target.groupBy, (g) => g.type !== 'fill');\r\n      // remove aggregations\r\n      this.target.select = _.map(this.target.select, (s) => {\r\n        return _.filter(s, (part) => {\r\n          var partModel = queryPart.create(part);\r\n          if (partModel.def.category === categories.Aggregations) {\r\n            return false;\r\n          }\r\n          if (partModel.def.category === categories.Selectors) {\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n      });\r\n    }\r\n\r\n    this.target.groupBy.splice(index, 1);\r\n    this.updateProjection();\r\n  }\r\n\r\n  removeSelect(index) {\r\n    this.target.select.splice(index, 1);\r\n    this.updateProjection();\r\n  }\r\n\r\n  removeSelectPart(selectParts, part) {\r\n    // if we remove the field remove the whole statement\r\n    if (part.def.type === 'field') {\r\n      if (this.selectModels.length > 1) {\r\n        var modelsIndex = _.indexOf(this.selectModels, selectParts);\r\n        this.selectModels.splice(modelsIndex, 1);\r\n      }\r\n    } else {\r\n      var partIndex = _.indexOf(selectParts, part);\r\n      selectParts.splice(partIndex, 1);\r\n    }\r\n\r\n    this.updatePersistedParts();\r\n  }\r\n\r\n  addSelectPart(selectParts, type) {\r\n    var partModel = queryPart.create({type: type});\r\n    partModel.def.addStrategy(selectParts, partModel, this);\r\n    this.updatePersistedParts();\r\n  }\r\n\r\n  renderTagCondition(tag, index, interpolate) {\r\n    var str = \"\";\r\n    var operator = tag.operator;\r\n    var value = tag.value;\r\n    if (index > 0) {\r\n      str = (tag.condition || 'AND') + ' ';\r\n    }\r\n\r\n    if (!operator) {\r\n      if (/^\\/.*\\/$/.test(value)) {\r\n        operator = '=~';\r\n      } else {\r\n        operator = '=';\r\n      }\r\n    }\r\n\r\n    // quote value unless regex\r\n    if (operator !== '=~' && operator !== '!~') {\r\n      if (interpolate) {\r\n        value = this.templateSrv.replace(value, this.scopedVars);\r\n      }\r\n      if (operator !== '>' && operator !== '<') {\r\n        value = \"'\" + value.replace(/\\\\/g, '\\\\\\\\') + \"'\";\r\n      }\r\n    } else if (interpolate) {\r\n      value = this.templateSrv.replace(value, this.scopedVars, 'regex');\r\n    }\r\n\r\n    return str + '\"' + tag.key + '\" ' + operator + ' ' + value;\r\n  }\r\n\r\n  getMeasurementAndPolicy(interpolate) {\r\n    var policy = this.target.policy;\r\n    var measurement = this.target.measurement || 'measurement';\r\n\r\n    if (!measurement.match('^/.*/')) {\r\n      measurement = '\"' + measurement+ '\"';\r\n    } else if (interpolate) {\r\n      measurement = this.templateSrv.replace(measurement, this.scopedVars, 'regex');\r\n    }\r\n\r\n    if (policy !== 'default') {\r\n      policy = '\"' + this.target.policy + '\".';\r\n    } else {\r\n      policy = \"\";\r\n    }\r\n\r\n    return policy + measurement;\r\n  }\r\n\r\n  interpolateQueryStr(value, variable, defaultFormatFn) {\r\n    // if no multi or include all do not regexEscape\r\n    if (!variable.multi && !variable.includeAll) {\r\n      return value;\r\n    }\r\n\r\n    if (typeof value === 'string') {\r\n      return kbn.regexEscape(value);\r\n    }\r\n\r\n    var escapedValues = _.map(value, kbn.regexEscape);\r\n    return escapedValues.join('|');\r\n  };\r\n\r\n  render(interpolate) {\r\n    var target = this.target;\r\n\r\n    if (target.rawQuery) {\r\n      if (interpolate) {\r\n        return this.templateSrv.replace(target.query, this.scopedVars, this.interpolateQueryStr);\r\n      } else {\r\n        return target.query;\r\n      }\r\n    }\r\n\r\n    var query = 'SELECT ';\r\n    var i, y;\r\n    for (i = 0; i < this.selectModels.length; i++) {\r\n      let parts = this.selectModels[i];\r\n      var selectText = \"\";\r\n      for (y = 0; y < parts.length; y++) {\r\n        let part = parts[y];\r\n        selectText = part.render(selectText);\r\n      }\r\n\r\n      if (i > 0) {\r\n        query += ', ';\r\n      }\r\n      query += selectText;\r\n    }\r\n\r\n    query += ' FROM ' + this.getMeasurementAndPolicy(interpolate) + ' WHERE ';\r\n    var conditions = _.map(target.tags, (tag, index) => {\r\n      return this.renderTagCondition(tag, index, interpolate);\r\n    });\r\n\r\n    query += conditions.join(' ');\r\n    query += (conditions.length > 0 ? ' AND ' : '') + '$timeFilter';\r\n\r\n    var groupBySection = \"\";\r\n    for (i = 0; i < this.groupByParts.length; i++) {\r\n      var part = this.groupByParts[i];\r\n      if (i > 0) {\r\n        // for some reason fill has no seperator\r\n        groupBySection += part.def.type === 'fill' ? ' ' : ', ';\r\n      }\r\n      groupBySection += part.render('');\r\n    }\r\n\r\n    if (groupBySection.length) {\r\n      query += ' GROUP BY ' + groupBySection;\r\n    }\r\n\r\n    if (target.fill) {\r\n      query += ' fill(' + target.fill + ')';\r\n    }\r\n\r\n    return query;\r\n  }\r\n\r\n  renderAdhocFilters(filters) {\r\n    var conditions = _.map(filters, (tag, index) => {\r\n      return this.renderTagCondition(tag, index, false);\r\n    });\r\n    return conditions.join(' ');\r\n  }\r\n}\r\n"]}