{"version":3,"sources":["../src/query_part.js"],"names":["createPart","part","def","index","type","message","QueryPart","register","options","QueryPartDef","category","push","aliasRenderer","innerExpr","params","fieldRenderer","replaceAggregationAddStrategy","selectParts","partModel","i","length","categories","Aggregations","Selectors","splice","addTransformationStrategy","Math","Aliasing","addMathStrategy","partCount","addAliasStrategy","addFieldStrategy","query","parts","_","map","clone","selectModels","functionRenderer","suffixRenderer","identityRenderer","quotedIdentityRenderer","Transformations","Fields","groupByTimeFunctions","addStrategy","dynamicLookup","defaultParams","renderer","name","quote","renderMode","create","getCategories"],"mappings":"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","file":"query_part.js","sourcesContent":["import _ from 'lodash';\r\nimport {\r\n  QueryPartDef,\r\n  QueryPart,\r\n  functionRenderer,\r\n  suffixRenderer,\r\n  identityRenderer,\r\n  quotedIdentityRenderer,\r\n} from 'app/core/components/query_part/query_part';\r\n\r\nvar index = [];\r\nvar categories = {\r\n  Aggregations: [],\r\n  Selectors: [],\r\n  Transformations: [],\r\n  Math: [],\r\n  Aliasing: [],\r\n  Fields: [],\r\n};\r\n\r\nfunction createPart(part) {\r\n  var def = index[part.type];\r\n  if (!def) {\r\n    throw {message: 'Could not find query part ' + part.type};\r\n  }\r\n\r\n  return new QueryPart(part, def);\r\n};\r\n\r\nfunction register(options) {\r\n  index[options.type] = new QueryPartDef(options);\r\n  options.category.push(index[options.type]);\r\n}\r\n\r\nvar groupByTimeFunctions = [];\r\n\r\nfunction aliasRenderer(part, innerExpr) {\r\n  return innerExpr + ' AS ' + '\"' + part.params[0] + '\"';\r\n}\r\n\r\nfunction fieldRenderer(part, innerExpr) {\r\n  if (part.params[0] === '*')  {\r\n    return '*';\r\n  }\r\n  return '\"' + part.params[0] + '\"';\r\n}\r\n\r\nfunction replaceAggregationAddStrategy(selectParts, partModel) {\r\n  // look for existing aggregation\r\n  for (var i = 0; i < selectParts.length; i++) {\r\n    var part = selectParts[i];\r\n    if (part.def.category === categories.Aggregations) {\r\n      selectParts[i] = partModel;\r\n      return;\r\n    }\r\n    if (part.def.category === categories.Selectors) {\r\n      selectParts[i] = partModel;\r\n      return;\r\n    }\r\n  }\r\n\r\n  selectParts.splice(1, 0, partModel);\r\n}\r\n\r\nfunction addTransformationStrategy(selectParts, partModel) {\r\n  var i;\r\n  // look for index to add transformation\r\n  for (i = 0; i < selectParts.length; i++) {\r\n    var part = selectParts[i];\r\n    if (part.def.category === categories.Math  || part.def.category === categories.Aliasing) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  selectParts.splice(i, 0, partModel);\r\n}\r\n\r\nfunction addMathStrategy(selectParts, partModel) {\r\n  var partCount = selectParts.length;\r\n  if (partCount > 0) {\r\n    // if last is math, replace it\r\n    if (selectParts[partCount-1].def.type === 'math') {\r\n      selectParts[partCount-1] = partModel;\r\n      return;\r\n    }\r\n    // if next to last is math, replace it\r\n    if (selectParts[partCount-2].def.type === 'math') {\r\n      selectParts[partCount-2] = partModel;\r\n      return;\r\n    } else if (selectParts[partCount-1].def.type === 'alias') { // if last is alias add it before\r\n      selectParts.splice(partCount-1, 0, partModel);\r\n      return;\r\n    }\r\n  }\r\n  selectParts.push(partModel);\r\n}\r\n\r\nfunction addAliasStrategy(selectParts, partModel) {\r\n  var partCount = selectParts.length;\r\n  if (partCount > 0) {\r\n    // if last is alias, replace it\r\n    if (selectParts[partCount-1].def.type === 'alias') {\r\n      selectParts[partCount-1] = partModel;\r\n      return;\r\n    }\r\n  }\r\n  selectParts.push(partModel);\r\n}\r\n\r\nfunction addFieldStrategy(selectParts, partModel, query) {\r\n  // copy all parts\r\n  var parts = _.map(selectParts, function(part) {\r\n    return createPart({type: part.def.type, params: _.clone(part.params)});\r\n  });\r\n\r\n  query.selectModels.push(parts);\r\n}\r\n\r\nregister({\r\n  type: 'field',\r\n  addStrategy: addFieldStrategy,\r\n  category: categories.Fields,\r\n  params: [{type: 'field', dynamicLookup: true}],\r\n  defaultParams: ['value'],\r\n  renderer: fieldRenderer,\r\n});\r\n\r\n// Aggregations\r\nregister({\r\n  type: 'count',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Aggregations,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'distinct',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Aggregations,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'integral',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Aggregations,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'mean',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Aggregations,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'median',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Aggregations,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'sum',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Aggregations,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\n// transformations\r\n\r\nregister({\r\n  type: 'derivative',\r\n  addStrategy: addTransformationStrategy,\r\n  category: categories.Transformations,\r\n  params: [{ name: \"duration\", type: \"interval\", options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h']}],\r\n  defaultParams: ['10s'],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'spread',\r\n  addStrategy: addTransformationStrategy,\r\n  category: categories.Transformations,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'non_negative_derivative',\r\n  addStrategy: addTransformationStrategy,\r\n  category: categories.Transformations,\r\n  params: [{ name: \"duration\", type: \"interval\", options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h']}],\r\n  defaultParams: ['10s'],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'difference',\r\n  addStrategy: addTransformationStrategy,\r\n  category: categories.Transformations,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'moving_average',\r\n  addStrategy: addTransformationStrategy,\r\n  category: categories.Transformations,\r\n  params: [{ name: \"window\", type: \"number\", options: [5, 10, 20, 30, 40]}],\r\n  defaultParams: [10],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'stddev',\r\n  addStrategy: addTransformationStrategy,\r\n  category: categories.Transformations,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'time',\r\n  category: groupByTimeFunctions,\r\n  params: [{ name: \"interval\", type: \"time\", options: ['auto', '1s', '10s', '1m', '5m', '10m', '15m', '1h'] }],\r\n  defaultParams: ['auto'],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'fill',\r\n  category: groupByTimeFunctions,\r\n  params: [{ name: \"fill\", type: \"string\", options: ['none', 'null', '0', 'previous'] }],\r\n  defaultParams: ['null'],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'elapsed',\r\n  addStrategy: addTransformationStrategy,\r\n  category: categories.Transformations,\r\n  params: [{ name: \"duration\", type: \"interval\", options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h']}],\r\n  defaultParams: ['10s'],\r\n  renderer: functionRenderer,\r\n});\r\n\r\n// Selectors\r\nregister({\r\n  type: 'bottom',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Selectors,\r\n  params: [{name: 'count', type: 'int'}],\r\n  defaultParams: [3],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'first',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Selectors,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'last',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Selectors,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'max',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Selectors,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'min',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Selectors,\r\n  params: [],\r\n  defaultParams: [],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'percentile',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Selectors,\r\n  params: [{name: 'nth', type: 'int'}],\r\n  defaultParams: [95],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'top',\r\n  addStrategy: replaceAggregationAddStrategy,\r\n  category: categories.Selectors,\r\n  params: [{name: 'count', type: 'int'}],\r\n  defaultParams: [3],\r\n  renderer: functionRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'tag',\r\n  category: groupByTimeFunctions,\r\n  params: [{name: 'tag', type: 'string', dynamicLookup: true}],\r\n  defaultParams: ['tag'],\r\n  renderer: fieldRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'math',\r\n  addStrategy: addMathStrategy,\r\n  category: categories.Math,\r\n  params: [{ name: \"expr\", type: \"string\"}],\r\n  defaultParams: [' / 100'],\r\n  renderer: suffixRenderer,\r\n});\r\n\r\nregister({\r\n  type: 'alias',\r\n  addStrategy: addAliasStrategy,\r\n  category: categories.Aliasing,\r\n  params: [{ name: \"name\", type: \"string\", quote: 'double'}],\r\n  defaultParams: ['alias'],\r\n  renderMode: 'suffix',\r\n  renderer: aliasRenderer,\r\n});\r\n\r\n\r\nexport default {\r\n  create: createPart,\r\n  getCategories: function() {\r\n    return categories;\r\n  }\r\n};\r\n"]}