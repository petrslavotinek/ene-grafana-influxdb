{"version":3,"sources":["../src/query_part.js"],"names":["createPart","part","def","index","type","message","QueryPart","register","options","QueryPartDef","category","push","aliasRenderer","innerExpr","params","fieldRenderer","replaceAggregationAddStrategy","selectParts","partModel","i","length","categories","Aggregations","Selectors","splice","addTransformationStrategy","Math","Aliasing","addMathStrategy","partCount","addAliasStrategy","addFieldStrategy","query","parts","_","map","clone","selectModels","functionRenderer","suffixRenderer","Transformations","Predictors","Fields","groupByTimeFunctions","addStrategy","dynamicLookup","defaultParams","renderer","name","quote","renderMode","create","getCategories"],"mappings":"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","file":"query_part.js","sourcesContent":["import _ from 'lodash';\nimport { QueryPartDef, QueryPart, functionRenderer, suffixRenderer } from './query_part_helpers';\n\nvar index = [];\nvar categories = {\n  Aggregations: [],\n  Selectors: [],\n  Transformations: [],\n  Predictors: [],\n  Math: [],\n  Aliasing: [],\n  Fields: [],\n};\n\nfunction createPart(part) {\n  var def = index[part.type];\n  if (!def) {\n    throw { message: 'Could not find query part ' + part.type };\n  }\n\n  return new QueryPart(part, def);\n}\n\nfunction register(options) {\n  index[options.type] = new QueryPartDef(options);\n  options.category.push(index[options.type]);\n}\n\nvar groupByTimeFunctions = [];\n\nfunction aliasRenderer(part, innerExpr) {\n  return innerExpr + ' AS ' + '\"' + part.params[0] + '\"';\n}\n\nfunction fieldRenderer(part, innerExpr) {\n  if (part.params[0] === '*') {\n    return '*';\n  }\n  return '\"' + part.params[0] + '\"';\n}\n\nfunction replaceAggregationAddStrategy(selectParts, partModel) {\n  // look for existing aggregation\n  for (var i = 0; i < selectParts.length; i++) {\n    var part = selectParts[i];\n    if (part.def.category === categories.Aggregations) {\n      selectParts[i] = partModel;\n      return;\n    }\n    if (part.def.category === categories.Selectors) {\n      selectParts[i] = partModel;\n      return;\n    }\n  }\n\n  selectParts.splice(1, 0, partModel);\n}\n\nfunction addTransformationStrategy(selectParts, partModel) {\n  var i;\n  // look for index to add transformation\n  for (i = 0; i < selectParts.length; i++) {\n    var part = selectParts[i];\n    if (part.def.category === categories.Math || part.def.category === categories.Aliasing) {\n      break;\n    }\n  }\n\n  selectParts.splice(i, 0, partModel);\n}\n\nfunction addMathStrategy(selectParts, partModel) {\n  var partCount = selectParts.length;\n  if (partCount > 0) {\n    // if last is math, replace it\n    if (selectParts[partCount - 1].def.type === 'math') {\n      selectParts[partCount - 1] = partModel;\n      return;\n    }\n    // if next to last is math, replace it\n    if (partCount > 1 && selectParts[partCount - 2].def.type === 'math') {\n      selectParts[partCount - 2] = partModel;\n      return;\n    } else if (selectParts[partCount - 1].def.type === 'alias') {\n      // if last is alias add it before\n      selectParts.splice(partCount - 1, 0, partModel);\n      return;\n    }\n  }\n  selectParts.push(partModel);\n}\n\nfunction addAliasStrategy(selectParts, partModel) {\n  var partCount = selectParts.length;\n  if (partCount > 0) {\n    // if last is alias, replace it\n    if (selectParts[partCount - 1].def.type === 'alias') {\n      selectParts[partCount - 1] = partModel;\n      return;\n    }\n  }\n  selectParts.push(partModel);\n}\n\nfunction addFieldStrategy(selectParts, partModel, query) {\n  // copy all parts\n  var parts = _.map(selectParts, function(part) {\n    return createPart({ type: part.def.type, params: _.clone(part.params) });\n  });\n\n  query.selectModels.push(parts);\n}\n\nregister({\n  type: 'field',\n  addStrategy: addFieldStrategy,\n  category: categories.Fields,\n  params: [{ type: 'field', dynamicLookup: true }],\n  defaultParams: ['value'],\n  renderer: fieldRenderer,\n});\n\n// Aggregations\nregister({\n  type: 'count',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'distinct',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'integral',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'mean',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'median',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'mode',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'sum',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\n// transformations\n\nregister({\n  type: 'derivative',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: 'duration',\n      type: 'interval',\n      options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['10s'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'spread',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'non_negative_derivative',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: 'duration',\n      type: 'interval',\n      options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['10s'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'difference',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'non_negative_difference',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'moving_average',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [{ name: 'window', type: 'int', options: [5, 10, 20, 30, 40] }],\n  defaultParams: [10],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'cumulative_sum',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'stddev',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'time',\n  category: groupByTimeFunctions,\n  params: [\n    {\n      name: 'interval',\n      type: 'time',\n      options: ['$__interval', '1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['$__interval'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'fill',\n  category: groupByTimeFunctions,\n  params: [\n    {\n      name: 'fill',\n      type: 'string',\n      options: ['none', 'null', '0', 'previous', 'linear'],\n    },\n  ],\n  defaultParams: ['null'],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'elapsed',\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: 'duration',\n      type: 'interval',\n      options: ['1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n  ],\n  defaultParams: ['10s'],\n  renderer: functionRenderer,\n});\n\n// predictions\nregister({\n  type: 'holt_winters',\n  addStrategy: addTransformationStrategy,\n  category: categories.Predictors,\n  params: [\n    { name: 'number', type: 'int', options: [5, 10, 20, 30, 40] },\n    { name: 'season', type: 'int', options: [0, 1, 2, 5, 10] },\n  ],\n  defaultParams: [10, 2],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'holt_winters_with_fit',\n  addStrategy: addTransformationStrategy,\n  category: categories.Predictors,\n  params: [\n    { name: 'number', type: 'int', options: [5, 10, 20, 30, 40] },\n    { name: 'season', type: 'int', options: [0, 1, 2, 5, 10] },\n  ],\n  defaultParams: [10, 2],\n  renderer: functionRenderer,\n});\n\n// Selectors\nregister({\n  type: 'bottom',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [3],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'first',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'last',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'max',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'min',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'percentile',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: 'nth', type: 'int' }],\n  defaultParams: [95],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'top',\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [3],\n  renderer: functionRenderer,\n});\n\nregister({\n  type: 'tag',\n  category: groupByTimeFunctions,\n  params: [{ name: 'tag', type: 'string', dynamicLookup: true }],\n  defaultParams: ['tag'],\n  renderer: fieldRenderer,\n});\n\nregister({\n  type: 'math',\n  addStrategy: addMathStrategy,\n  category: categories.Math,\n  params: [{ name: 'expr', type: 'string' }],\n  defaultParams: [' / 100'],\n  renderer: suffixRenderer,\n});\n\nregister({\n  type: 'alias',\n  addStrategy: addAliasStrategy,\n  category: categories.Aliasing,\n  params: [{ name: 'name', type: 'string', quote: 'double' }],\n  defaultParams: ['alias'],\n  renderMode: 'suffix',\n  renderer: aliasRenderer,\n});\n\nexport default {\n  create: createPart,\n  getCategories: function() {\n    return categories;\n  },\n};\n"]}