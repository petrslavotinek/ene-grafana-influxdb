{"version":3,"sources":["../src/query_ctrl.js"],"names":["angular","_","EneInfluxQueryBuilder","EneInfluxQuery","queryPart","QueryCtrl","EneInfluxQueryCtrl","$scope","$injector","templateSrv","$q","uiSegmentSrv","target","queryModel","panel","scopedVars","queryBuilder","datasource","database","groupBySegment","newPlusButton","resultFormats","text","value","policySegment","newSegment","policy","measurement","measurementSegment","newSelectMeasurement","tagSegments","tags","tag","operator","test","condition","push","newCondition","newKey","key","newOperator","newKeyValue","fixTagSegments","buildSelectMenu","removeTagFilterSegment","fake","categories","getCategories","selectMenu","reduce","memo","cat","menu","submenu","map","item","type","query","buildExploreQuery","metricFindQuery","then","options","hasFill","hasGroupByTime","catch","handleQueryError","bind","addGroupBy","plusButton","html","panelCtrl","refresh","selectParts","subitem","addSelectPart","part","evt","name","fieldsQuery","transformToSegments","removeSelectPart","when","index","tagsQuery","removeGroupByPart","count","length","lastSegment","Math","max","policiesQuery","render","err","console","log","rawQuery","measurementFilter","undefined","error","message","addTemplateVars","results","segments","segment","expandable","variables","variable","unshift","nextValue","newOperators","splice","copy","newFake","cssClass","rebuildTargetTagConditions","tagIndex","tagOperator","each","segment2","getTagValueOperator","tagValue","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import angular from 'angular';\r\nimport _ from 'lodash';\r\nimport EneInfluxQueryBuilder from './query_builder';\r\nimport EneInfluxQuery from './influx_query';\r\nimport queryPart from './query_part';\r\nimport {QueryCtrl} from 'app/plugins/sdk';\r\n\r\nexport class EneInfluxQueryCtrl extends QueryCtrl {\r\n  static templateUrl = 'partials/query.editor.html';\r\n\r\n  queryModel;\r\n  queryBuilder;\r\n  groupBySegment;\r\n  resultFormats;\r\n  policySegment;\r\n  tagSegments;\r\n  selectMenu;\r\n  measurementSegment;\r\n  removeTagFilterSegment;\r\n\r\n  /** @ngInject **/\r\n  constructor($scope, $injector, templateSrv, $q, uiSegmentSrv) {\r\n    super($scope, $injector);\r\n\r\n    this.templateSrv = templateSrv;\r\n    this.$q = $q;\r\n    this.uiSegmentSrv = uiSegmentSrv;\r\n    this.target = this.target;\r\n    this.queryModel = new EneInfluxQuery(this.target, templateSrv, this.panel.scopedVars);\r\n    this.queryBuilder = new EneInfluxQueryBuilder(this.target, this.datasource.database);\r\n    this.groupBySegment = this.uiSegmentSrv.newPlusButton();\r\n    this.resultFormats = [\r\n      {text: 'Time series', value: 'time_series'},\r\n      {text: 'Table', value: 'table'},\r\n    ];\r\n\r\n    this.policySegment = uiSegmentSrv.newSegment(this.target.policy);\r\n\r\n    if (!this.target.measurement) {\r\n      this.measurementSegment = uiSegmentSrv.newSelectMeasurement();\r\n    } else {\r\n      this.measurementSegment = uiSegmentSrv.newSegment(this.target.measurement);\r\n    }\r\n\r\n    this.tagSegments = [];\r\n    for (let tag of this.target.tags) {\r\n      if (!tag.operator) {\r\n        if (/^\\/.*\\/$/.test(tag.value)) {\r\n          tag.operator = \"=~\";\r\n        } else {\r\n          tag.operator = '=';\r\n        }\r\n      }\r\n\r\n      if (tag.condition) {\r\n        this.tagSegments.push(uiSegmentSrv.newCondition(tag.condition));\r\n      }\r\n\r\n      this.tagSegments.push(uiSegmentSrv.newKey(tag.key));\r\n      this.tagSegments.push(uiSegmentSrv.newOperator(tag.operator));\r\n      this.tagSegments.push(uiSegmentSrv.newKeyValue(tag.value));\r\n    }\r\n\r\n    this.fixTagSegments();\r\n    this.buildSelectMenu();\r\n    this.removeTagFilterSegment = uiSegmentSrv.newSegment({fake: true, value: '-- remove tag filter --'});\r\n  }\r\n\r\n  buildSelectMenu() {\r\n    var categories = queryPart.getCategories();\r\n    this.selectMenu = _.reduce(categories, function(memo, cat, key) {\r\n      var menu = {\r\n        text: key,\r\n        submenu: cat.map(item => {\r\n         return {text: item.type, value: item.type};\r\n        }),\r\n      };\r\n      memo.push(menu);\r\n      return memo;\r\n    }, []);\r\n  }\r\n\r\n  getGroupByOptions() {\r\n    var query = this.queryBuilder.buildExploreQuery('TAG_KEYS');\r\n\r\n    return this.datasource.metricFindQuery(query).then(tags => {\r\n      var options = [];\r\n      if (!this.queryModel.hasFill()) {\r\n        options.push(this.uiSegmentSrv.newSegment({value: 'fill(null)'}));\r\n      }\r\n      if (!this.queryModel.hasGroupByTime()) {\r\n        options.push(this.uiSegmentSrv.newSegment({value: 'time($interval)'}));\r\n      }\r\n      for (let tag of tags) {\r\n        options.push(this.uiSegmentSrv.newSegment({value: 'tag(' + tag.text + ')'}));\r\n      }\r\n      return options;\r\n    }).catch(this.handleQueryError.bind(this));\r\n  }\r\n\r\n  groupByAction() {\r\n    this.queryModel.addGroupBy(this.groupBySegment.value);\r\n    var plusButton = this.uiSegmentSrv.newPlusButton();\r\n    this.groupBySegment.value  = plusButton.value;\r\n    this.groupBySegment.html  = plusButton.html;\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  addSelectPart(selectParts, cat, subitem) {\r\n    this.queryModel.addSelectPart(selectParts, subitem.value);\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  handleSelectPartEvent(selectParts, part, evt) {\r\n    switch (evt.name) {\r\n      case \"get-param-options\": {\r\n        var fieldsQuery = this.queryBuilder.buildExploreQuery('FIELDS');\r\n        return this.datasource.metricFindQuery(fieldsQuery)\r\n        .then(this.transformToSegments(true))\r\n        .catch(this.handleQueryError.bind(this));\r\n      }\r\n      case \"part-param-changed\": {\r\n        this.panelCtrl.refresh();\r\n        break;\r\n      }\r\n      case \"action\": {\r\n        this.queryModel.removeSelectPart(selectParts, part);\r\n        this.panelCtrl.refresh();\r\n        break;\r\n      }\r\n      case \"get-part-actions\": {\r\n        return this.$q.when([{text: 'Remove', value: 'remove-part'}]);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleGroupByPartEvent(part, index, evt) {\r\n    switch (evt.name) {\r\n      case \"get-param-options\": {\r\n        var tagsQuery = this.queryBuilder.buildExploreQuery('TAG_KEYS');\r\n        return this.datasource.metricFindQuery(tagsQuery)\r\n        .then(this.transformToSegments(true))\r\n        .catch(this.handleQueryError.bind(this));\r\n      }\r\n      case \"part-param-changed\": {\r\n        this.panelCtrl.refresh();\r\n        break;\r\n      }\r\n      case \"action\": {\r\n        this.queryModel.removeGroupByPart(part, index);\r\n        this.panelCtrl.refresh();\r\n        break;\r\n      }\r\n      case \"get-part-actions\": {\r\n        return this.$q.when([{text: 'Remove', value: 'remove-part'}]);\r\n      }\r\n    }\r\n  }\r\n\r\n  fixTagSegments() {\r\n    var count = this.tagSegments.length;\r\n    var lastSegment = this.tagSegments[Math.max(count-1, 0)];\r\n\r\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\r\n      this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\r\n    }\r\n  }\r\n\r\n  measurementChanged() {\r\n    this.target.measurement = this.measurementSegment.value;\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  getPolicySegments() {\r\n    var policiesQuery = this.queryBuilder.buildExploreQuery('RETENTION POLICIES');\r\n    return this.datasource.metricFindQuery(policiesQuery)\r\n    .then(this.transformToSegments(false))\r\n    .catch(this.handleQueryError.bind(this));\r\n  }\r\n\r\n  policyChanged() {\r\n    this.target.policy = this.policySegment.value;\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  toggleEditorMode() {\r\n    try {\r\n      this.target.query = this.queryModel.render(false);\r\n    } catch (err) {\r\n      console.log('query render error');\r\n    }\r\n    this.target.rawQuery = !this.target.rawQuery;\r\n  }\r\n\r\n  getMeasurements(measurementFilter) {\r\n    var query = this.queryBuilder.buildExploreQuery('MEASUREMENTS', undefined, measurementFilter);\r\n    return this.datasource.metricFindQuery(query)\r\n      .then(this.transformToSegments(true))\r\n      .catch(this.handleQueryError.bind(this));\r\n  }\r\n\r\n  handleQueryError(err) {\r\n    this.error = err.message || 'Failed to issue metric query';\r\n    return [];\r\n  }\r\n\r\n  transformToSegments(addTemplateVars) {\r\n    return (results) => {\r\n      var segments = _.map(results, segment => {\r\n        return this.uiSegmentSrv.newSegment({ value: segment.text, expandable: segment.expandable });\r\n      });\r\n\r\n      if (addTemplateVars) {\r\n        for (let variable of this.templateSrv.variables) {\r\n          segments.unshift(this.uiSegmentSrv.newSegment({ type: 'template', value: '/^$' + variable.name + '$/', expandable: true }));\r\n        }\r\n      }\r\n\r\n      return segments;\r\n    };\r\n  }\r\n\r\n  getTagsOrValues(segment, index) {\r\n    if (segment.type === 'condition') {\r\n      return this.$q.when([this.uiSegmentSrv.newSegment('AND'), this.uiSegmentSrv.newSegment('OR')]);\r\n    }\r\n    if (segment.type === 'operator') {\r\n      var nextValue = this.tagSegments[index+1].value;\r\n      if (/^\\/.*\\/$/.test(nextValue)) {\r\n        return this.$q.when(this.uiSegmentSrv.newOperators(['=~', '!~']));\r\n      } else {\r\n        return this.$q.when(this.uiSegmentSrv.newOperators(['=', '!=', '<>', '<', '>']));\r\n      }\r\n    }\r\n\r\n    var query, addTemplateVars;\r\n    if (segment.type === 'key' || segment.type === 'plus-button') {\r\n      query = this.queryBuilder.buildExploreQuery('TAG_KEYS');\r\n      addTemplateVars = false;\r\n    } else if (segment.type === 'value')  {\r\n      query = this.queryBuilder.buildExploreQuery('TAG_VALUES', this.tagSegments[index-2].value);\r\n      addTemplateVars = true;\r\n    }\r\n\r\n    return this.datasource.metricFindQuery(query)\r\n    .then(this.transformToSegments(addTemplateVars))\r\n    .then(results => {\r\n      if (segment.type === 'key') {\r\n        results.splice(0, 0, angular.copy(this.removeTagFilterSegment));\r\n      }\r\n      return results;\r\n    })\r\n    .catch(this.handleQueryError.bind(this));\r\n  }\r\n\r\n  getFieldSegments() {\r\n    var fieldsQuery = this.queryBuilder.buildExploreQuery('FIELDS');\r\n    return this.datasource.metricFindQuery(fieldsQuery)\r\n    .then(this.transformToSegments(false))\r\n    .catch(this.handleQueryError);\r\n  }\r\n\r\n  tagSegmentUpdated(segment, index) {\r\n    this.tagSegments[index] = segment;\r\n\r\n    // handle remove tag condition\r\n    if (segment.value === this.removeTagFilterSegment.value) {\r\n      this.tagSegments.splice(index, 3);\r\n      if (this.tagSegments.length === 0) {\r\n        this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\r\n      } else if (this.tagSegments.length > 2) {\r\n        this.tagSegments.splice(Math.max(index-1, 0), 1);\r\n        if (this.tagSegments[this.tagSegments.length-1].type !== 'plus-button') {\r\n          this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\r\n        }\r\n      }\r\n    } else {\r\n      if (segment.type === 'plus-button') {\r\n        if (index > 2) {\r\n          this.tagSegments.splice(index, 0, this.uiSegmentSrv.newCondition('AND'));\r\n        }\r\n        this.tagSegments.push(this.uiSegmentSrv.newOperator('='));\r\n        this.tagSegments.push(this.uiSegmentSrv.newFake('select tag value', 'value', 'query-segment-value'));\r\n        segment.type = 'key';\r\n        segment.cssClass = 'query-segment-key';\r\n      }\r\n\r\n      if ((index+1) === this.tagSegments.length) {\r\n        this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\r\n      }\r\n    }\r\n\r\n    this.rebuildTargetTagConditions();\r\n  }\r\n\r\n  rebuildTargetTagConditions() {\r\n    var tags = [];\r\n    var tagIndex = 0;\r\n    var tagOperator = \"\";\r\n\r\n    _.each(this.tagSegments, (segment2, index) => {\r\n      if (segment2.type === 'key') {\r\n        if (tags.length === 0) {\r\n          tags.push({});\r\n        }\r\n        tags[tagIndex].key = segment2.value;\r\n      } else if (segment2.type === 'value') {\r\n        tagOperator = this.getTagValueOperator(segment2.value, tags[tagIndex].operator);\r\n        if (tagOperator) {\r\n          this.tagSegments[index-1] = this.uiSegmentSrv.newOperator(tagOperator);\r\n          tags[tagIndex].operator = tagOperator;\r\n        }\r\n        tags[tagIndex].value = segment2.value;\r\n      } else if (segment2.type === 'condition') {\r\n        tags.push({ condition: segment2.value });\r\n        tagIndex += 1;\r\n      } else if (segment2.type === 'operator') {\r\n        tags[tagIndex].operator = segment2.value;\r\n      }\r\n    });\r\n\r\n    this.target.tags = tags;\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  getTagValueOperator(tagValue, tagOperator) {\r\n    if (tagOperator !== '=~' && tagOperator !== '!~' && /^\\/.*\\/$/.test(tagValue)) {\r\n      return '=~';\r\n    } else if ((tagOperator === '=~' || tagOperator === '!~') && /^(?!\\/.*\\/$)/.test(tagValue)) {\r\n      return '=';\r\n    }\r\n  }\r\n\r\n  getCollapsedText() {\r\n    return this.queryModel.render(false);\r\n  }\r\n}\r\n"]}