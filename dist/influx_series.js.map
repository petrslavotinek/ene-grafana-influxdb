{"version":3,"sources":["../src/influx_series.js"],"names":["_","TableModel","EneInfluxSeries","options","series","alias","annotation","output","self","i","j","length","each","columns","tags","map","value","key","seriesName","name","columnName","_getSeriesName","join","datapoints","values","push","target","index","regex","segments","split","replace","match","g1","g2","group","segIndex","parseInt","isNaN","indexOf","tag","list","titleCol","timeCol","tagsCol","textCol","column","titleColumn","tagsColumn","textColumn","data","time","Date","title","text","includeMeasurementColumn","table","seriesIndex","type","keys","reordered","hasOwnProperty","rows"],"mappings":"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","file":"influx_series.js","sourcesContent":["import _ from 'lodash';\r\nimport TableModel from 'app/core/table_model';\r\n\r\nexport default class EneInfluxSeries {\r\n constructor(options) {\r\n    this.series = options.series;\r\n    this.alias = options.alias;\r\n    this.annotation = options.annotation;\r\n  }\r\n\r\n  getTimeSeries() {\r\n    var output = [];\r\n    var self = this;\r\n    var i, j;\r\n\r\n    if (self.series.length === 0) {\r\n      return output;\r\n    }\r\n\r\n    _.each(self.series, function(series) {\r\n      var columns = series.columns.length;\r\n      var tags = _.map(series.tags, function(value, key) {\r\n        return key + ': ' + value;\r\n      });\r\n\r\n      for (j = 1; j < columns; j++) {\r\n        var seriesName = series.name;\r\n        var columnName = series.columns[j];\r\n        if (columnName !== 'value') {\r\n          seriesName = seriesName + '.' + columnName;\r\n        }\r\n\r\n        if (self.alias) {\r\n          seriesName = self._getSeriesName(series, j);\r\n        } else if (series.tags) {\r\n          seriesName = seriesName + ' {' + tags.join(', ') + '}';\r\n        }\r\n\r\n        var datapoints = [];\r\n        if (series.values) {\r\n          for (i = 0; i < series.values.length; i++) {\r\n            datapoints[i] = [series.values[i][j], series.values[i][0]];\r\n          }\r\n        }\r\n\r\n        output.push({ target: seriesName, datapoints: datapoints});\r\n      }\r\n    });\r\n\r\n    return output;\r\n  }\r\n\r\n  _getSeriesName(series, index) {\r\n    var regex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)\\]\\]/g;\r\n    var segments = series.name.split('.');\r\n\r\n    return this.alias.replace(regex, function(match, g1, g2) {\r\n      var group = g1 || g2;\r\n      var segIndex = parseInt(group, 10);\r\n\r\n      if (group === 'm' || group === 'measurement') { return series.name; }\r\n      if (group === 'col') { return series.columns[index]; }\r\n      if (!isNaN(segIndex)) { return segments[segIndex]; }\r\n      if (group.indexOf('tag_') !== 0) { return match; }\r\n\r\n      var tag = group.replace('tag_', '');\r\n      if (!series.tags) { return match; }\r\n      return series.tags[tag];\r\n    });\r\n  }\r\n\r\n  getAnnotations() {\r\n    var list = [];\r\n    var self = this;\r\n\r\n    _.each(this.series, function (series) {\r\n      var titleCol = null;\r\n      var timeCol = null;\r\n      var tagsCol = null;\r\n      var textCol = null;\r\n\r\n      _.each(series.columns, function(column, index) {\r\n        if (column === 'time') { timeCol = index; return; }\r\n        if (column === 'sequence_number') { return; }\r\n        if (!titleCol) { titleCol = index; }\r\n        if (column === self.annotation.titleColumn) { titleCol = index; return; }\r\n        if (column === self.annotation.tagsColumn) { tagsCol = index; return; }\r\n        if (column === self.annotation.textColumn) { textCol = index; return; }\r\n      });\r\n\r\n      _.each(series.values, function (value) {\r\n        var data = {\r\n          annotation: self.annotation,\r\n          time: + new Date(value[timeCol]),\r\n          title: value[titleCol],\r\n          tags: value[tagsCol],\r\n          text: value[textCol]\r\n        };\r\n\r\n        list.push(data);\r\n      });\r\n    });\r\n\r\n    return list;\r\n  }\r\n\r\n  getTable(includeMeasurementColumn) {\r\n    var table = new TableModel();\r\n    var self = this;\r\n    var i, j;\r\n\r\n    if (self.series.length === 0) {\r\n      return table;\r\n    }\r\n\r\n    _.each(self.series, function(series, seriesIndex) {\r\n\r\n      if (seriesIndex === 0) {\r\n        table.columns.push({text: 'Time', type: 'time'});\r\n        if (includeMeasurementColumn) {\r\n          table.columns.push({text: 'Measurement'});\r\n        }\r\n        _.each(_.keys(series.tags), function(key) {\r\n          table.columns.push({text: key});\r\n        });\r\n        for (j = 1; j < series.columns.length; j++) {\r\n          table.columns.push({text: series.columns[j]});\r\n        }\r\n      }\r\n\r\n      if (series.values) {\r\n        for (i = 0; i < series.values.length; i++) {\r\n          var values = series.values[i];\r\n          var reordered = [values[0]];\r\n          if (includeMeasurementColumn) {\r\n            reordered.push(series.name);\r\n          }\r\n          if (series.tags) {\r\n            for (var key in series.tags) {\r\n              if (series.tags.hasOwnProperty(key)) {\r\n                reordered.push(series.tags[key]);\r\n              }\r\n            }\r\n          }\r\n          for (j = 1; j < values.length; j++) {\r\n            reordered.push(values[j]);\r\n          }\r\n          table.rows.push(reordered);\r\n        }\r\n      }\r\n    });\r\n\r\n    return table;\r\n  }\r\n}"]}