{"version":3,"sources":["../src/query_part_helpers.js"],"names":["functionRenderer","part","innerExpr","str","def","type","parameters","_","map","params","value","index","paramType","quote","unshift","join","suffixRenderer","identityRenderer","quotedIdentityRenderer","QueryPartDef","options","defaultParams","renderer","category","addStrategy","QueryPart","message","clone","updateText","strValue","indexOf","optional","hasMultipleParamsInString","each","split","partVal","idx","updateParam","trim","splice","length","text"],"mappings":"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","file":"query_part_helpers.js","sourcesContent":["import _ from 'lodash';\r\n\r\nexport class QueryPartDef {\r\n  type;\r\n  params;\r\n  defaultParams;\r\n  renderer;\r\n  category;\r\n  addStrategy;\r\n\r\n  constructor(options) {\r\n    this.type = options.type;\r\n    this.params = options.params;\r\n    this.defaultParams = options.defaultParams;\r\n    this.renderer = options.renderer;\r\n    this.category = options.category;\r\n    this.addStrategy = options.addStrategy;\r\n  }\r\n}\r\n\r\nexport class QueryPart {\r\n  part;\r\n  def;\r\n  params;\r\n  text;\r\n\r\n  constructor(part, def) {\r\n    this.part = part;\r\n    this.def = def;\r\n    if (!this.def) {\r\n      throw { message: 'Could not find query part ' + part.type };\r\n    }\r\n\r\n    part.params = part.params || _.clone(this.def.defaultParams);\r\n    this.params = part.params;\r\n    this.updateText();\r\n  }\r\n\r\n  render(innerExpr) {\r\n    return this.def.renderer(this, innerExpr);\r\n  }\r\n\r\n  hasMultipleParamsInString(strValue, index) {\r\n    if (strValue.indexOf(',') === -1) {\r\n      return false;\r\n    }\r\n\r\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\r\n  }\r\n\r\n  updateParam(strValue, index) {\r\n    // handle optional parameters\r\n    // if string contains ',' and next param is optional, split and update both\r\n    if (this.hasMultipleParamsInString(strValue, index)) {\r\n      _.each(strValue.split(','), (partVal, idx) => {\r\n        this.updateParam(partVal.trim(), idx);\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (strValue === '' && this.def.params[index].optional) {\r\n      this.params.splice(index, 1);\r\n    } else {\r\n      this.params[index] = strValue;\r\n    }\r\n\r\n    this.part.params = this.params;\r\n    this.updateText();\r\n  }\r\n\r\n  updateText() {\r\n    if (this.params.length === 0) {\r\n      this.text = this.def.type + '()';\r\n      return;\r\n    }\r\n\r\n    var text = this.def.type + '(';\r\n    text += this.params.join(', ');\r\n    text += ')';\r\n    this.text = text;\r\n  }\r\n}\r\n\r\nexport function functionRenderer(part, innerExpr) {\r\n  var str = part.def.type + '(';\r\n  var parameters = _.map(part.params, (value, index) => {\r\n    var paramType = part.def.params[index];\r\n    if (paramType.type === 'time') {\r\n      if (value === 'auto') {\r\n        value = '$__interval';\r\n      }\r\n    }\r\n    if (paramType.quote === 'single') {\r\n      return \"'\" + value + \"'\";\r\n    } else if (paramType.quote === 'double') {\r\n      return '\"' + value + '\"';\r\n    }\r\n\r\n    return value;\r\n  });\r\n\r\n  if (innerExpr) {\r\n    parameters.unshift(innerExpr);\r\n  }\r\n  return str + parameters.join(', ') + ')';\r\n}\r\n\r\nexport function suffixRenderer(part, innerExpr) {\r\n  return innerExpr + ' ' + part.params[0];\r\n}\r\n\r\nexport function identityRenderer(part, innerExpr) {\r\n  return part.params[0];\r\n}\r\n\r\nexport function quotedIdentityRenderer(part, innerExpr) {\r\n  return '\"' + part.params[0] + '\"';\r\n}\r\n"]}