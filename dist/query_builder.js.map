{"version":3,"sources":["../src/query_builder.js"],"names":["renderTagCondition","tag","index","str","operator","value","condition","test","isNaN","key","_","EneInfluxQueryBuilder","target","database","rawQuery","_modifyRawQuery","_buildQuery","type","withKey","withMeasurementFilter","query","measurement","match","tags","length","whereConditions","reduce","memo","push","join"],"mappings":"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","file":"query_builder.js","sourcesContent":["import _ from 'lodash';\r\n\r\nexport class EneInfluxQueryBuilder {\r\n  constructor (target, database) {\r\n    this.target = target;\r\n    this.database = database;\r\n  }\r\n\r\n  build() {\r\n    return this.target.rawQuery ? this._modifyRawQuery() : this._buildQuery();\r\n  }\r\n\r\n  buildExploreQuery(type, withKey, withMeasurementFilter) {\r\n    var query;\r\n    var measurement;\r\n\r\n    if (type === 'TAG_KEYS') {\r\n      query = 'SHOW TAG KEYS';\r\n      measurement = this.target.measurement;\r\n    } else if (type === 'TAG_VALUES') {\r\n      query = 'SHOW TAG VALUES';\r\n      measurement = this.target.measurement;\r\n    } else if (type === 'MEASUREMENTS') {\r\n      query = 'SHOW MEASUREMENTS';\r\n      if (withMeasurementFilter)\r\n      {\r\n        query += ' WITH MEASUREMENT =~ /' + withMeasurementFilter +'/';\r\n      }\r\n    } else if (type === 'FIELDS') {\r\n      query = 'SHOW FIELD KEYS FROM \"' + this.target.measurement + '\"';\r\n      return query;\r\n    } else if (type === 'RETENTION POLICIES') {\r\n      query = 'SHOW RETENTION POLICIES on \"' + this.database + '\"';\r\n      return query;\r\n    }\r\n\r\n    if (measurement) {\r\n      if (!measurement.match('^/.*/') && !measurement.match(/^merge\\(.*\\)/)) {\r\n        measurement = '\"' + measurement+ '\"';\r\n      }\r\n      query += ' FROM ' + measurement;\r\n    }\r\n\r\n    if (withKey) {\r\n      query += ' WITH KEY = \"' + withKey + '\"';\r\n    }\r\n\r\n    if (this.target.tags && this.target.tags.length > 0) {\r\n      var whereConditions = _.reduce(this.target.tags, function(memo, tag) {\r\n        // do not add a condition for the key we want to explore for\r\n        if (tag.key === withKey) {\r\n          return memo;\r\n        }\r\n        memo.push(renderTagCondition(tag, memo.length));\r\n        return memo;\r\n      }, []);\r\n\r\n      if (whereConditions.length > 0) {\r\n        query +=  ' WHERE ' + whereConditions.join(' ');\r\n      }\r\n    }\r\n\r\n    return query;\r\n  }\r\n}\r\n\r\nfunction renderTagCondition (tag, index) {\r\n  var str = \"\";\r\n  var operator = tag.operator;\r\n  var value = tag.value;\r\n  if (index > 0) {\r\n    str = (tag.condition || 'AND') + ' ';\r\n  }\r\n\r\n  if (!operator) {\r\n    if (/^\\/.*\\/$/.test(tag.value)) {\r\n      operator = '=~';\r\n    } else {\r\n      operator = '=';\r\n    }\r\n  }\r\n\r\n  // quote value unless regex or number\r\n  if (operator !== '=~' && operator !== '!~' && isNaN(+value)) {\r\n    value = \"'\" + value + \"'\";\r\n  }\r\n\r\n  return str + '\"' + tag.key + '\" ' + operator + ' ' + value;\r\n}"]}